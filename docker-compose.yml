version: '3.1'

services:
  # ELK
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - walldo

 # logstash:
 #   build:
 #     context: logstash/
 #     args:
 #       ELK_VERSION: $ELK_VERSION
 #   volumes:
 #     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
 #     - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
 #   ports:
 #     - "5000:5000"
 #     - "9600:9600"
 #   environment:
 #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
 #   networks:
 #     - walldo
 #   depends_on:
 #     - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - walldo
    depends_on:
      - elasticsearch

  # BBDD 
  mongo:
    image: mongo
    container_name: "mongo_walldo"
    restart: always
    env_file:
      - ./mongocreds.env
    volumes:
      - ./mongodb/mongo_data/db:/data/db
    ports:
      - 27017:27017
    networks:
      - walldo

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file:
      - ./mongocreds.env
    networks:
      - walldo

  # Python container
  walldo_py:
    build:
      context: walldo_py
    networks:
      - walldo
    depends_on:
      - mongo

networks:

  walldo:
    driver: bridge
